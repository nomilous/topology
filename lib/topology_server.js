// Generated by CoffeeScript 1.4.0
var TopologyServer;

TopologyServer = (function() {

  function TopologyServer(properties) {
    var prop,
      _this = this;
    for (prop in properties) {
      this[prop] = properties[prop];
    }
    if (!this.app) {
      throw 'missing app';
    }
    if (!this.sockets) {
      throw 'missing sockets';
    }
    this.sockets.on('connection', function(socket) {
      socket.on('person:register', function(person) {
        person.key = 'KEY';
        return socket.emit('person:register:ok', person);
      });
      return socket.on('topology:start_at', function(payload) {
        return _this.startAt({
          socket: socket,
          payload: payload
        });
      });
    });
  }

  TopologyServer.prototype.startAt = function(params) {
    var lat, latDir, latVal, long, longDir, longVal, tileID;
    if (!params.socket) {
      throw 'missing socket';
    }
    if (!params.payload) {
      throw 'missing payload';
    }
    lat = params.payload.lat;
    long = params.payload.long;
    if (lat < 0) {
      latVal = Math.floor(-lat);
      latDir = 'S';
    } else {
      latVal = Math.ciel(lat);
      latDir = 'N';
    }
    if (long < 0) {
      longVal = Math.ciel(-long);
      longDir = 'W';
    } else {
      longVal = Math.floor(long);
      longDir = 'E';
    }
    if (latVal < 10) {
      latVal = '0' + latVal;
    }
    if (longVal < 10) {
      longVal = '00' + longVal;
    } else if (longVal < 100) {
      longVal = '0' + longVal;
    }
    tileID = latDir + latVal + longDir + longVal;
    return this.loadTile(tileID);
  };

  return TopologyServer;

})();

module.exports = TopologyServer;
